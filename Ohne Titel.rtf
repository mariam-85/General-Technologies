{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Verdana;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red251\green2\blue7;\red0\green0\blue0;
\red248\green250\blue249;\red25\green37\blue46;\red128\green0\blue0;\red128\green128\blue0;\red0\green0\blue128;
}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c100000\c14913\c0;\cssrgb\c0\c0\c0;
\cssrgb\c97647\c98431\c98039;\cssrgb\c12941\c19216\c23529;\csgenericrgb\c50196\c0\c0;\csgenericrgb\c50196\c50196\c0;\csgenericrgb\c0\c0\c50196;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \uc0\u1053 \u1072  \u1087 \u1088 \u1072 \u1082 \u1090 \u1080 \u1082 \u1077  \u1080 \u1089 \u1087 \u1086 \u1083 \u1100 \u1079 \u1091 \u1102 \u1090 \u1089 \u1103  \u1089 \u1083 \u1077 \u1076 . "\u1089 \u1074 \u1103 \u1079 \u1082 \u1072 " \u1080 \u1079  \u1041 \u1044 :\
	- \uc0\u1055 \u1077 \u1088 \u1074 \u1080 \u1095 \u1085 \u1072 \u1103  (primary) - \u1085 \u1072 \u1087 \u1088 ., MongoDB\
	- \uc0\u1042 \u1090 \u1086 \u1088 \u1080 \u1095 \u1085 \u1072 \u1103  (secondary) - \u1085 \u1072 \u1087 \u1088 ., Redis\
______________________________________________________________________________________\
\
\uc0\u1041 \u1044  - \u1101 \u1090 \u1086  \u1089 \u1090 \u1088 \u1091 \u1082 \u1090 \u1091 \u1088 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085 \u1085 \u1099 \u1081  \u1085 \u1072 \u1073 \u1086 \u1088  \u1076 \u1072 \u1085 \u1085 \u1099 \u1093 , \u1087 \u1088 \u1077 \u1076 \u1085 \u1072 \u1079 . \u1076 \u1083 \u1103  \u1072 \u1074 \u1090 \u1086 \u1084 \u1072 \u1090 \u1080 \u1079 \u1080 \u1088 \u1086 \u1074 \u1072 \u1085 \u1085 \u1086 \u1081  (\u1087 \u1088 \u1086 \u1075 \u1088 \u1072 \u1084 \u1084 \u1085 \u1086 \u1081 ) \u1086 \u1073 \u1088 \u1072 \u1073 \u1086 \u1090 \u1082 \u1080 \
\
\uc0\u1044 \u1072 \u1085 \u1085 \u1099 \u1077 : 3.14, 2.7, 1000, 'hello', '\u1086 \u1090 \u1087 \u1088 \u1072 \u1074 \u1083 \u1077 \u1085 \u1086 '\
\uc0\u1048 \u1085 \u1092 \u1086 \u1088 \u1084 \u1072 \u1094 \u1080 \u1103 : "\u1076 \u1074 \u1077 \u1088 \u1100  \u1089 \u1090 \u1086 \u1080 \u1090  1000 EURO"\
\uc0\u1057 \u1074 \u1077 \u1076 \u1077 \u1085 \u1080 \u1103 : "\u1076 \u1074 \u1077 \u1088 \u1100  \u1089 \u1090 \u1086 \u1080 \u1090  1000 EURO - \u1076 \u1083 \u1103  \u1085 \u1072 \u1096 \u1077 \u1081  \u1082 \u1086 \u1084 \u1087 \u1072 \u1085 \u1080 \u1080  \u1101 \u1090 \u1086  \u1076 \u1086 \u1088 \u1086 \u1075 \u1086 "\
\
______________________________________________________________________________________\
\
\
\uc0\u1050 \u1051 \u1048 \u1045 \u1053 \u1058 -\u1057 \u1045 \u1056 \u1042 \u1045 \u1056 \u1053 \u1040 \u1071  \u1040 \u1056 \u1061 \u1048 \u1058 \u1045 \u1050 \u1058 \u1059 \u1056 \u1040 \
\
\uc0\u1069 \u1090 \u1086  \u1089 \u1087 \u1086 \u1089 \u1086 \u1073  \u1074 \u1079 \u1072 \u1080 \u1084 \u1086 \u1076 \u1077 \u1081 \u1089 \u1090 \u1074 \u1080 \u1103  \u1084 \u1077 \u1078 \u1076 \u1091  \u1089 \u1077 \u1090 \u1077 \u1074 \u1099 \u1084 \u1080  \u1091 \u1079 \u1083 \u1099 \u1084 \u1080 , \u1075 \u1076 \u1077 \
	- \uc0\u1040 \u1082 \u1090 \u1080 \u1074 \u1085 \u1072 \u1103  \u1089 \u1090 \u1086 \u1088 \u1086 \u1085 \u1072  (\u1088 \u1086 \u1083 \u1100  - \u1082 \u1083 \u1080 \u1077 \u1085 \u1090 \u1072 ) - \u1074 \u1099 \u1087 \u1086 \u1083 \u1085 \u1103 \u1077 \u1090  \u1079 \u1072 \u1087 \u1088 \u1086 \u1089 \u1099 \
	- \uc0\u1055 \u1072 \u1089 \u1089 \u1080 \u1074 \u1085 \u1072 \u1103  \u1089 \u1090 \u1086 \u1088 \u1086 \u1085 \u1072  (\u1088 \u1086 \u1083 \u1100  - \u1089 \u1077 \u1088 \u1074 \u1077 \u1088 ) - \u1087 \u1088 \u1080 \u1085 \u1080 \u1084 \u1072 \u1077 \u1090  /  \u1086 \u1073 \u1088 \u1072 \u1073 \u1072 \u1090 \u1099 \u1074 \u1072 \u1077 \u1090  \u1079 \u1072 \u1087 \u1088 \u1086 \u1089 \u1099 \
	\
\
\uc0\u1058 \u1072 \u1082 \u1078 \u1077  \u1089 \u1077 \u1088 \u1074 \u1077 \u1088 \u1086 \u1084  \u1085 \u1072 \u1079 \u1099 \u1074 \u1072 \u1077 \u1090  \u1074 \u1099 \u1089 \u1086 \u1082 \u1086 \u1087 \u1088 \u1086 \u1080 \u1079 \u1074 . \u1082 \u1086 \u1084 \u1087 \u1100 \u1102 \u1090 \u1077 \u1088 , \u1082 \u1086 \u1090 \u1086 \u1088 \u1099 \u1081 , \u1082 \u1072 \u1082  \u1087 \u1088 \u1072 \u1074 \u1080 \u1083 \u1086 , \u1085 \u1072 \u1093 \u1086 \u1076 \u1080 \u1090 \u1089 \u1103  \u1074  \u1076 \u1072 \u1090 \u1072  \u1094 \u1077 \u1085 \u1090 \u1088 \u1072 \u1093 \
\
______________________________________________________________________________________\
\
\
// CREATE\
// insertOne\
// insertMany\
\
// READ\
// findOne\
// find\
\
// UPDATE\
// updateOne\
// updateMany\
\
\
// DELETE\
// deleteOne\
// deleteMany\
\
______________________________________________________________________________________\
\
\
\
CREATE TABLE Clients (\
     id         NUMERIC(4) NOT NULL,\
     name       VARCHAR(30) NOT NULL,\
     phone      NUMERIC(20) NOT NULL\
     );\
\
\
CREATE TABLE Customers (\
     id         NUMERIC(4) NOT NULL UNIQUE,\
     name       VARCHAR(30) NOT NULL,\
     phone      NUMERIC(20) NOT NULL\
     );\
\
INSERT INTO Customers (\
  id,\
  name,\
  phone\
  ) VALUES (\
    01,\
    'Mariam Lofink',\
    0175786950849\
    );\
\
INSERT INTO Customers (\
  id,\
  name,\
  phone\
  ) VALUES (\
    02,\
    'Alex Lofink',\
    0175788493856\
    );\
\
\
SELECT COUNT(*) AS total\
FROM Customers\
\
SELECT AVG(Price) AS avg_price,\
       MIN(Price) AS min_price,\
       MAX(Price) AS max_price\
FROM Products\
\
SELECT ProductID,\
       Price AS Price_euro,\
       Price*138 AS Price_JPY\
FROM Products\
\
SELECT SUM(Price) AS Total\
FROM Products\
\
SELECT Country,\
COUNT(*) AS TotalClients \
FROM Customers\
GROUP BY Country\
ORDER BY TotalClients DESC;\
\
SELECT Country FROM Customers\
UNION\
SELECT Country FROM Suppliers\
ORDER BY Country;\
\
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
DELETE FROM Customers\
WHERE CustomerName = 'Wilman Kala'\
\
SELECT \
t1.OrderID,\
t2.CustomerName,\
t2.Country\
FROM Orders t1\
LEFT JOIN Customers t2\
ON t1.CustomerID = t2.CustomerID\
WHERE OrderID=10248\
\
SELECT \
t1.OrderID,\
t2.CustomerName,\
t2.Country\
FROM Orders t1\
LEFT JOIN Customers t2\
ON t1.CustomerID = t2.CustomerID\
\
ORDER BY Country\
\
SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));\
\
\
select\
	first_name,\
    	last_name,\
    	max(age)\
from Customers;\
\
\
select count(*) as orders_amount\
from Orders;\
\
select\
	avg(amount) as avg_amount\
from Orders;\
\
select\
	item,\
	sum(amount) as sum_amount\
from Orders\
group by item;\
\
select\
	Country,\
    avg(age) as avg_age\
from Customers\
where Country = 'UK';\
\
select\
	Country,\
    avg(age) as avg_age\
from Customers\
where country in ('USA', 'UK')\
group by country;\
\
\
select\
	Country,\
    avg(age) as avg_age\
from Customers\
group by country\
having country in ('USA', 'UK');\
\
select\
country,\
avg(age) as avg_age\
from customers\
group by country\
having avg(age) >= 25;\
\
SELECT \
t1.first_name,\
t1.last_name,\
t2.avg_amount\
FROM Customers t1\
INNER JOIN (\
  select\
  customer_id,\
avg(amount) as avg_amount\
  from orders\
  group by customer_id\
  having avg_amount >= 400\
  ) t2\
ON t1.customer_id = t2.customer_id;\
\
\
/*SELECT \
t1.first_name,\
t1.last_name,\
t2.avg_amount\
FROM Customers t1\
INNER JOIN (\
  select\
  customer_id,\
avg(amount) as avg_amount\
  from orders\
  group by customer_id\
  having avg_amount >= 400\
  ) t2\
ON t1.customer_id = t2.customer_id;*/\
\
\
-- \uc0\u1053 \u1072 \u1081 \u1090 \u1080  \u1089 \u1088 \u1077 \u1076 \u1085 \u1080 \u1081  amount \u1091  \u1082 \u1072 \u1078 \u1076 \u1086 \u1075 \u1086  \u1087 \u1086 \u1082 \u1091 \u1087 \u1072 \u1090 \u1077 \u1083 \u1103 \
\
-- \uc0\u1085 \u1072 \u1081 \u1090 \u1080  \u1089 \u1088 \u1077 \u1076 \u1085 \u1080 \u1081  amount \u1087 \u1086  customer_id\
-- \uc0\u1089 \u1076 \u1077 \u1083 \u1072 \u1090 \u1100  join \u1089  customers \u1087 \u1086  customer_id\
\
\
SELECT \
t2.first_name,\
t2.last_name,\
t1.avg_amount\
FROM (\
  select\
  customer_id,\
  avg(amount) as avg_amount\
  from orders\
  group by customer_id\
  ) t1\
INNER JOIN Customers t2\
ON t1.customer_id = t2.customer_id;\
\
select\
  avg(amount) as avg_amount\
  from orders\
  group by customer_id\
\
SELECT\
  CustomerID,\
  Count(OrderID) AS Total_Orders\
  FROM Orders\
  GROUP BY CustomerID\
ORDER BY Total_Orders DESC\
\
\
\
SELECT\
  EmployeeID,\
  Count(OrderID) AS Total_Orders\
  FROM Orders\
  GROUP BY EmployeeID\
ORDER BY Total_Orders DESC\
LIMIT 3
\f0\fs24 \cb1 \kerning1\expnd0\expndtw0 \
\
\

\f1\fs28 \cb2 \expnd0\expndtw0\kerning0
SELECT\
  Country,\
  Count(CustomerID) AS Total_Customers\
  FROM Customers\
  GROUP BY Country\
ORDER BY Total_Customers ASC\
LIMIT 3\
\
SELECT\
  Country,\
  Count(CustomerID) AS Total_Customers\
  FROM Customers\
  GROUP BY Country\
HAVING Count(CustomerID) >= 7\
ORDER BY Total_Customers DESC\
\
SELECT\
   count(\
     case\
        when customer_id > 3 then 1\
     else null\
     end\
) as cnt\
FROM Customers;\
\
SELECT\
   sum(\
     case\
        when age >= 25 then age\
     else 0\
     end\
) as sum\
FROM Customers;\
\
SELECT\
   sum(\
     case\
        when amount <= 400\
            then amount\
          else 0\
     end\
) as sum_amount\
FROM Orders;\
\
SELECT\
   avg(\
     case\
        when amount >= 400\
            then amount\
          else null\
     end\
) as avg_amount\
FROM Orders;\
\
SELECT ProductName, Price\
FROM Products\
WHERE Price > 100;\
\
-- \uc0\u1077 \u1089 \u1083 \u1080  \u1089 \u1090 \u1086 \u1080 \u1084 \u1086 \u1089 \u1090 \u1100  \u1090 \u1086 \u1074 \u1072 \u1088 \u1072  \u1086 \u1090  100 (EURO) \u1090 \u1086  - "\u1076 \u1086 \u1088 \u1086 \u1075 \u1086 \u1089 \u1090 \u1086 \u1102 \u1097 \u1080 \u1081 "\
-- \uc0\u1074  \u1087 \u1088 \u1086 \u1090 \u1080 \u1074 \u1085 \u1086 \u1084  \u1089 \u1083 \u1091 \u1095 \u1072 \u1077  "\u1089  \u1085 \u1080 \u1079 \u1082 \u1086 \u1081  \u1094 \u1077 \u1085 \u1086 \u1081 "\
-- \uc0\u1054 \u1058 \u1042 \u1045 \u1058 : \u1053 \u1072 \u1079 \u1074 \u1072 \u1085 \u1080 \u1077 , \u1062 \u1077 \u1085 \u1072 , CategoryName\
\
\
\
SELECT \
ProductName, Price,\
CASE\
        WHEN PRICE >= 100 THEN 'Expensive'\
        WHEN PRICE <= 10 THEN 'Very cheap'    \
        ELSE 'Cheap'\
        END AS CategoryName\
FROM Products;\
\
\
SELECT \
ProductID, OrderID, Quantity,\
CASE\
        WHEN Quantity BETWEEN 1 AND 2 THEN 'Small order'\
        WHEN Quantity BETWEEN 3 AND 4 THEN 'Average order'   \
        ELSE 'Big order'\
        END AS QuantityGrade\
FROM OrderDetails;\
\
SELECT \
CustomerName, City, Country\
FROM Customers\
ORDER BY City;\
\
UPDATE Customers\
SET City = NULL;\
\
SELECT\
SUM(price)\
FROM Products\
WHERE Price >= 100;\
\
SELECT\
   SUM(price)\
     case\
        when price >= 100\
            then price\
          else 0\
     end\
) as sum_exp\
FROM Products;\
\
\
_______________________________________________________________\
\
\
SELECT\
model,\
ram,\
screen\
FROM\
Laptop\
WHERE\
Price > 1000;\
\
\
SELECT *\
FROM Printer\
WHERE Color = \'82y\'91;\
\
SELECT\
model,\
speed,\
hd\
FROM PC\
WHERE cd in ('12x', '24x')\
AND\
Price < 600;\
\ul \
\ulnone SELECT DISTINCT\
t2.maker,\
t1.speed\
FROM Laptop t1\
INNER JOIN Product t2\
ON t1.model = t2.model\
WHERE t1.hd >= 10;\
\ul \
\
\ulnone SELECT\
t1.maker\
FROM (\
SELECT DISTINCT\
maker\
FROM Product\
WHERE type = 'PC\'91\
) t1\
LEFT JOIN (\
SELECT DISTINCT\
maker\
FROM Product\
WHERE type = \'82Laptop\'91\
) t2\
ON t1.maker = t2.maker\
WHERE t2.maker IS NULL\ul \ulc0 ;\
\
\pard\pardeftab720\partightenfactor0
\cf0 \ulnone SELECT DISTINCT\
t1.maker\
FROM Product t1\
INNER JOIN PC t2\
ON t1.model = t2.model\
WHERE t2.speed >= 450\ul ;\
\
\ulnone SELECT\
model, price\
FROM Printer\
WHERE Price = (SELECT MAX(Price) FROM Printer)\ul ;\
\
\ulnone SELECT AVG(speed) AS avg_speed\
FROM PC;\ul \
\
\
\ulnone SELECT first_name FROM Customers\
UNION ALL\
SELECT item FROM Orders;\
\
SELECT first_name FROM Customers\
UNION \
SELECT item FROM Orders;\
\
SELECT id, title, null as price, quantity FROM Goods\
UNION ALL\
SELECT id, title, quantity, price FROM Goods_1;\ul \
\
\
\ulnone select\
cast(age as integer) as customer_age\
from customers\
union all\
select order_id from orders;\
\
SELECT \
t2.model,\
t2.price\
from Product t1\
inner join (\
SELECT model, price from PC\
UNION\
SELECT model, price from Laptop\
UNION\
SELECT model, price from Printer\
) t2\
on t1.model = t2.model\
where t1.maker = 'B'\
\
(12)\
SELECT AVG(speed) AS avg_speed\
FROM Laptop\
WHERE Price > 1000\ul \
\ulnone \
(13)\
SELECT avg(speed) AS Avg_speed\
from PC t1\
inner join Product t2\
on t1.model = t2.model\
where t2.maker = 'A'\
\
(14)\ul \
\ulnone Select t1.class,\
       t1.name,\
       t2.country\
from Ships t1\
inner join Classes t2\
on t1.class = t2.class\
where t2.numGuns >= 10\
\
(15)\
Select hd\
from PC\
group by hd\
having count(*) > 1\
\
(16)\
select distinct\
        t1.model,\
        t2.model,\
        t2.speed,\
        t2.ram\
from PC t1\
inner join PC t2\
on t1.ram = t2.ram\
and t1.speed = t2.speed\
and t1.model > t2.model\
\
(17)\
select distinct\
      'Laptop' as type,\
      model,\
      speed\
from Laptop\
where speed < (select min(speed) from PC)\
\
(18)\
select distinct\
      t2.maker,\
      t1.price\
from Printer t1\
inner join Product t2\
on t1.model = t2.model\
where color = 'y'\
and price = (\
        select\
             min(price)\
        from Printer\
        where color = 'y'\
)\
\
(19)\
select\
      t2.maker,\
      avg(screen)\
from Laptop t1\
inner join Product t2\
on t1.model = t2.model\
group by t2.maker\
\
(20)\
select\
      maker,\
      count(*) as model_cnt\
from Product\
where type = 'PC'\
group by maker\
having count(*) >= 3\
\
(21)\
Select\
     t2.maker,\
     max(t1.price) as MAX_price\
from PC t1\
inner join Product t2\
on t1.model = t2.model\
group by t2.maker\
\
(22)\
Select\
     speed,\
     avg(price) as AVG_price\
from PC\
where speed > 600\
group by speed\
\
(23)\
Select distinct\
       t2.maker\
from PC t1\
inner join Product t2\
on t1.model = t2.model\
and t1.speed >= 750\
inner join(\
\
select\
      t2.maker\
from Laptop t1\
inner join Product t2\
on t1.model = t2.model\
where speed >= 750\
) t3\
on t2.maker = t3.maker\
\
(24)\
select\
      model\
from (\
      select price, model from Laptop\
      union \
      select price, model from PC\
      union\
      select price, model from Printer\
) t2\
where price = (\
      Select\
            max(price) as MAX_price\
      from (\
            select price from Laptop\
            union \
            select price from PC\
            union\
            select price from Printer\
      ) t1\
)\
\
\
\
\pard\pardeftab720\qc\partightenfactor0
\cf3 \cb4 \ul MongoDB\cf0 \cb2 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf2 \cb4 db.users.find(\{\
  name: \{$in: ['Anatoly', 'Dmitry', 'Olga', 'Semen']\}\
  \})\cf5 \cb6 \
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf0 \cb2 \
db.users.updateOne(\{name: "\uc0\u1053 \u1080 \u1082 \u1080 \u1090 \u1072 "\}, \
        \{$set: \{ id: 3 \} \})\ul \
\ulnone \
\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf5 \cb6 db.users.deleteMany(\{ \
  age: \{$lte:  28\} \
\})\
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf0 \cb2 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf5 \cb6 db.facebook.find( \{$and: [\
  \{age: \{$gte: 30\}\},\
  \{age: \{$lte:  40\}\}\
  ]\} )\
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf0 \cb2 \
\pard\pardeftab720\partightenfactor0

\f3\b\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 db
\f2\b0 .
\f3\b eventlog
\f2\b0 .
\f3\b find\cf7 (
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 'weight_kg'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf8 '$gte'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 6
\f3\b \cf7 \},
\f2\b0 \cf0 \
        \cf8 'type'
\f3\b \cf7 :
\f2\b0 \cf0  \cf8 'washing'\cf0 \
    
\f3\b \cf7 \}
\f2\b0 \cf0 \

\f3\b \cf7 )\
\
\
\cf0 db
\f2\b0 .
\f3\b eventlog
\f2\b0 .
\f3\b aggregate\cf7 ([
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 '$match'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 'weight_kg'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf8 '$gte'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 6
\f3\b \cf7 \},
\f2\b0 \cf0 \
        \cf8 'type'
\f3\b \cf7 :
\f2\b0 \cf0  \cf8 'washing'\cf0 \
        
\f3\b \cf7 \}
\f2\b0 \cf0 \
    
\f3\b \cf7 \}
\f2\b0 \cf0 \
\

\f3\b \cf7 ])\
\
\cf0 db
\f2\b0 .
\f3\b eventlog
\f2\b0 .
\f3\b find\cf7 (
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 'weight_kg'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf8 '$gte'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 6
\f3\b \cf7 \},
\f2\b0 \cf0 \
        \cf8 'type'
\f3\b \cf7 :
\f2\b0 \cf0  \cf8 'washing'\cf0 \
    
\f3\b \cf7 \},
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 'machine_id'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 1
\f3\b \cf7 ,
\f2\b0 \cf0 \
        \cf8 'mode'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 1
\f3\b \cf7 ,
\f2\b0 \cf0 \
        \cf8 '_id'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 0\cf0 \
    
\f3\b \cf7 \}
\f2\b0 \cf0 \

\f3\b \cf7 )\
\
lt - <\
lte - <=\
gt - >\
gte - >=\
eq - =\
ne - !=\
\

\f2\b0 \cf0 db.videos.updateMany
\f3\b \cf7 (
\f2\b0 \cf0 \
    
\f3\b \cf7 \{\},
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 '$set'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf0 \
            \cf8 'is_approvedroved'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 true\cf0 \
            
\f3\b \cf7 \}
\f2\b0 \cf0 \
    
\f3\b \cf7 \}
\f2\b0 \cf0 \

\f3\b \cf7 )\
\

\f2\b0 \cf0 db.videos.updateMany
\f3\b \cf7 (
\f2\b0 \cf0 \
    
\f3\b \cf7 \{\},
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 '$unset'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf0 \
            \cf8 'is_approved'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 null
\f3\b \cf7 ,
\f2\b0 \cf0 \
            \cf8 'category_id'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 null\cf0 \
            
\f3\b \cf7 \}
\f2\b0 \cf0 \
    
\f3\b \cf7 \}
\f2\b0 \cf0 \

\f3\b \cf7 )\
\

\f2\b0 \cf0 db.videos.updateMany
\f3\b \cf7 (
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 'id'
\f3\b \cf7 :
\f2\b0 \cf0  \cf8 'm4kd91jdjfi'\cf0 \
    
\f3\b \cf7 \},
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 '$inc'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{ // uvelichenie
\f2\b0 \cf0 \
            \cf8 'price'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 200\cf0 \
            
\f3\b \cf7 \}
\f2\b0 \cf0 \
    
\f3\b \cf7 \}
\f2\b0 \cf0 \

\f3\b \cf7 )
\f1\b0\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 db.videos.updateMany
\f3\b \cf7 (
\f2\b0 \cf0 \
    
\f3\b \cf7 \{\},
\f2\b0 \cf0 \
    
\f3\b \cf7 \{
\f2\b0 \cf0 \
        \cf8 '$mul'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf0  \
            \cf8 'price'
\f3\b \cf7 :
\f2\b0 \cf0  .\cf9 9\cf0 \
            
\f3\b \cf7 \},
\f2\b0 \cf0 \
            \cf8 '$set'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf0 \
                \cf8 'is_approved'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 true\cf0 \
            
\f3\b \cf7 \},
\f2\b0 \cf0 \
            \cf8 '$unset'
\f3\b \cf7 :
\f2\b0 \cf0  
\f3\b \cf7 \{
\f2\b0 \cf0 \
                \cf8 'is_banned'
\f3\b \cf7 :
\f2\b0 \cf0  \cf9 null\cf0 \
                
\f3\b \cf7 \}
\f2\b0 \cf0 \
    
\f3\b \cf7 \}
\f2\b0 \cf0 \
    \

\f3\b \cf7 )
\f1\b0\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
\
\
}